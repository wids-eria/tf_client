//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4 /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g 2012-07-27 13:57:56

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 168, 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591


#pragma warning disable 0414
#pragma warning disable 3021


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;
using ConditionalAttribute = System.Diagnostics.ConditionalAttribute;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4")]
//[System.CLSCompliant(false)]
public partial class JSONRecognizerLexer : Antlr.Runtime.Lexer
{
	public const int EOF=-1;
	public const int T__21=21;
	public const int T__22=22;
	public const int T__23=23;
	public const int T__24=24;
	public const int T__25=25;
	public const int T__26=26;
	public const int T__27=27;
	public const int T__28=28;
	public const int ARRAY=4;
	public const int COMMA=5;
	public const int Digit=6;
	public const int EscapeSequence=7;
	public const int Exponent=8;
	public const int FALSE=9;
	public const int FIELD=10;
	public const int HexDigit=11;
	public const int NULL=12;
	public const int NUMBER=13;
	public const int Number=14;
	public const int OBJECT=15;
	public const int STRING=16;
	public const int String=17;
	public const int TRUE=18;
	public const int UnicodeEscape=19;
	public const int WS=20;

    // delegates
    // delegators

	public JSONRecognizerLexer()
	{
		OnCreated();
	}

	public JSONRecognizerLexer(ICharStream input )
		: this(input, new RecognizerSharedState())
	{
	}

	public JSONRecognizerLexer(ICharStream input, RecognizerSharedState state)
		: base(input, state)
	{

		OnCreated();
	}
	public override string GrammarFileName { get { return "/Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g"; } }

	private static readonly bool[] decisionCanBacktrack = new bool[0];

	[Conditional("ANTLR_TRACE")]
	protected virtual void OnCreated() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule(string ruleName, int ruleIndex) {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule(string ruleName, int ruleIndex) {}

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_COMMA() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_COMMA() {}

    // $ANTLR start "COMMA"
    [GrammarRule("COMMA")]
    private void mCOMMA()
    {
    	EnterRule_COMMA();
    	EnterRule("COMMA", 1);
    	TraceIn("COMMA", 1);
    		try
    		{
    		int _type = COMMA;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:12:7: ( ',' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:12:9: ','
    		{
    		DebugLocation(12, 9);
    		Match(','); 

    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("COMMA", 1);
    		LeaveRule("COMMA", 1);
    		LeaveRule_COMMA();
        }
    }
    // $ANTLR end "COMMA"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_T__21() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_T__21() {}

    // $ANTLR start "T__21"
    [GrammarRule("T__21")]
    private void mT__21()
    {
    	EnterRule_T__21();
    	EnterRule("T__21", 2);
    	TraceIn("T__21", 2);
    		try
    		{
    		int _type = T__21;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:13:7: ( ':' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:13:9: ':'
    		{
    		DebugLocation(13, 9);
    		Match(':'); 

    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("T__21", 2);
    		LeaveRule("T__21", 2);
    		LeaveRule_T__21();
        }
    }
    // $ANTLR end "T__21"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_T__22() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_T__22() {}

    // $ANTLR start "T__22"
    [GrammarRule("T__22")]
    private void mT__22()
    {
    	EnterRule_T__22();
    	EnterRule("T__22", 3);
    	TraceIn("T__22", 3);
    		try
    		{
    		int _type = T__22;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:14:7: ( '[' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:14:9: '['
    		{
    		DebugLocation(14, 9);
    		Match('['); 

    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("T__22", 3);
    		LeaveRule("T__22", 3);
    		LeaveRule_T__22();
        }
    }
    // $ANTLR end "T__22"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_T__23() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_T__23() {}

    // $ANTLR start "T__23"
    [GrammarRule("T__23")]
    private void mT__23()
    {
    	EnterRule_T__23();
    	EnterRule("T__23", 4);
    	TraceIn("T__23", 4);
    		try
    		{
    		int _type = T__23;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:15:7: ( ']' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:15:9: ']'
    		{
    		DebugLocation(15, 9);
    		Match(']'); 

    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("T__23", 4);
    		LeaveRule("T__23", 4);
    		LeaveRule_T__23();
        }
    }
    // $ANTLR end "T__23"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_T__24() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_T__24() {}

    // $ANTLR start "T__24"
    [GrammarRule("T__24")]
    private void mT__24()
    {
    	EnterRule_T__24();
    	EnterRule("T__24", 5);
    	TraceIn("T__24", 5);
    		try
    		{
    		int _type = T__24;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:16:7: ( 'false' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:16:9: 'false'
    		{
    		DebugLocation(16, 9);
    		Match("false"); 


    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("T__24", 5);
    		LeaveRule("T__24", 5);
    		LeaveRule_T__24();
        }
    }
    // $ANTLR end "T__24"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_T__25() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_T__25() {}

    // $ANTLR start "T__25"
    [GrammarRule("T__25")]
    private void mT__25()
    {
    	EnterRule_T__25();
    	EnterRule("T__25", 6);
    	TraceIn("T__25", 6);
    		try
    		{
    		int _type = T__25;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:17:7: ( 'null' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:17:9: 'null'
    		{
    		DebugLocation(17, 9);
    		Match("null"); 


    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("T__25", 6);
    		LeaveRule("T__25", 6);
    		LeaveRule_T__25();
        }
    }
    // $ANTLR end "T__25"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_T__26() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_T__26() {}

    // $ANTLR start "T__26"
    [GrammarRule("T__26")]
    private void mT__26()
    {
    	EnterRule_T__26();
    	EnterRule("T__26", 7);
    	TraceIn("T__26", 7);
    		try
    		{
    		int _type = T__26;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:18:7: ( 'true' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:18:9: 'true'
    		{
    		DebugLocation(18, 9);
    		Match("true"); 


    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("T__26", 7);
    		LeaveRule("T__26", 7);
    		LeaveRule_T__26();
        }
    }
    // $ANTLR end "T__26"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_T__27() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_T__27() {}

    // $ANTLR start "T__27"
    [GrammarRule("T__27")]
    private void mT__27()
    {
    	EnterRule_T__27();
    	EnterRule("T__27", 8);
    	TraceIn("T__27", 8);
    		try
    		{
    		int _type = T__27;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:19:7: ( '{' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:19:9: '{'
    		{
    		DebugLocation(19, 9);
    		Match('{'); 

    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("T__27", 8);
    		LeaveRule("T__27", 8);
    		LeaveRule_T__27();
        }
    }
    // $ANTLR end "T__27"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_T__28() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_T__28() {}

    // $ANTLR start "T__28"
    [GrammarRule("T__28")]
    private void mT__28()
    {
    	EnterRule_T__28();
    	EnterRule("T__28", 9);
    	TraceIn("T__28", 9);
    		try
    		{
    		int _type = T__28;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:20:7: ( '}' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:20:9: '}'
    		{
    		DebugLocation(20, 9);
    		Match('}'); 

    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("T__28", 9);
    		LeaveRule("T__28", 9);
    		LeaveRule_T__28();
        }
    }
    // $ANTLR end "T__28"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_Number() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_Number() {}

    // $ANTLR start "Number"
    [GrammarRule("Number")]
    private void mNumber()
    {
    	EnterRule_Number();
    	EnterRule("Number", 10);
    	TraceIn("Number", 10);
    		try
    		{
    		int _type = Number;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:103:2: ( ( '-' )? ( Digit )+ ( '.' ( Digit )+ )? )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:103:4: ( '-' )? ( Digit )+ ( '.' ( Digit )+ )?
    		{
    		DebugLocation(103, 4);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:103:4: ( '-' )?
    		int alt1=2;
    		try { DebugEnterSubRule(1);
    		try { DebugEnterDecision(1, decisionCanBacktrack[1]);
    		int LA1_0 = input.LA(1);

    		if ((LA1_0=='-'))
    		{
    			alt1 = 1;
    		}
    		} finally { DebugExitDecision(1); }
    		switch (alt1)
    		{
    		case 1:
    			DebugEnterAlt(1);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:103:4: '-'
    			{
    			DebugLocation(103, 4);
    			Match('-'); 

    			}
    			break;

    		}
    		} finally { DebugExitSubRule(1); }

    		DebugLocation(103, 9);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:103:9: ( Digit )+
    		int cnt2=0;
    		try { DebugEnterSubRule(2);
    		while (true)
    		{
    			int alt2=2;
    			try { DebugEnterDecision(2, decisionCanBacktrack[2]);
    			int LA2_0 = input.LA(1);

    			if (((LA2_0>='0' && LA2_0<='9')))
    			{
    				alt2 = 1;
    			}


    			} finally { DebugExitDecision(2); }
    			switch (alt2)
    			{
    			case 1:
    				DebugEnterAlt(1);
    				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:
    				{
    				DebugLocation(103, 9);
    				input.Consume();


    				}
    				break;

    			default:
    				if (cnt2 >= 1)
    					goto loop2;

    				EarlyExitException eee2 = new EarlyExitException( 2, input );
    				DebugRecognitionException(eee2);
    				throw eee2;
    			}
    			cnt2++;
    		}
    		loop2:
    			;

    		} finally { DebugExitSubRule(2); }

    		DebugLocation(103, 16);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:103:16: ( '.' ( Digit )+ )?
    		int alt4=2;
    		try { DebugEnterSubRule(4);
    		try { DebugEnterDecision(4, decisionCanBacktrack[4]);
    		int LA4_0 = input.LA(1);

    		if ((LA4_0=='.'))
    		{
    			alt4 = 1;
    		}
    		} finally { DebugExitDecision(4); }
    		switch (alt4)
    		{
    		case 1:
    			DebugEnterAlt(1);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:103:18: '.' ( Digit )+
    			{
    			DebugLocation(103, 18);
    			Match('.'); 
    			DebugLocation(103, 22);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:103:22: ( Digit )+
    			int cnt3=0;
    			try { DebugEnterSubRule(3);
    			while (true)
    			{
    				int alt3=2;
    				try { DebugEnterDecision(3, decisionCanBacktrack[3]);
    				int LA3_0 = input.LA(1);

    				if (((LA3_0>='0' && LA3_0<='9')))
    				{
    					alt3 = 1;
    				}


    				} finally { DebugExitDecision(3); }
    				switch (alt3)
    				{
    				case 1:
    					DebugEnterAlt(1);
    					// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:
    					{
    					DebugLocation(103, 22);
    					input.Consume();


    					}
    					break;

    				default:
    					if (cnt3 >= 1)
    						goto loop3;

    					EarlyExitException eee3 = new EarlyExitException( 3, input );
    					DebugRecognitionException(eee3);
    					throw eee3;
    				}
    				cnt3++;
    			}
    			loop3:
    				;

    			} finally { DebugExitSubRule(3); }


    			}
    			break;

    		}
    		} finally { DebugExitSubRule(4); }


    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("Number", 10);
    		LeaveRule("Number", 10);
    		LeaveRule_Number();
        }
    }
    // $ANTLR end "Number"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_Exponent() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_Exponent() {}

    // $ANTLR start "Exponent"
    [GrammarRule("Exponent")]
    private void mExponent()
    {
    	EnterRule_Exponent();
    	EnterRule("Exponent", 11);
    	TraceIn("Exponent", 11);
    		try
    		{
    		int _type = Exponent;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:107:2: ( ( 'e' | 'E' ) ( '-' )? ( '1' .. '9' ) ( Digit )* )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:107:4: ( 'e' | 'E' ) ( '-' )? ( '1' .. '9' ) ( Digit )*
    		{
    		DebugLocation(107, 4);
    		if (input.LA(1)=='E'||input.LA(1)=='e')
    		{
    			input.Consume();
    		}
    		else
    		{
    			MismatchedSetException mse = new MismatchedSetException(null,input);
    			DebugRecognitionException(mse);
    			Recover(mse);
    			throw mse;
    		}

    		DebugLocation(107, 14);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:107:14: ( '-' )?
    		int alt5=2;
    		try { DebugEnterSubRule(5);
    		try { DebugEnterDecision(5, decisionCanBacktrack[5]);
    		int LA5_0 = input.LA(1);

    		if ((LA5_0=='-'))
    		{
    			alt5 = 1;
    		}
    		} finally { DebugExitDecision(5); }
    		switch (alt5)
    		{
    		case 1:
    			DebugEnterAlt(1);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:107:14: '-'
    			{
    			DebugLocation(107, 14);
    			Match('-'); 

    			}
    			break;

    		}
    		} finally { DebugExitSubRule(5); }

    		DebugLocation(107, 19);
    		if ((input.LA(1)>='1' && input.LA(1)<='9'))
    		{
    			input.Consume();
    		}
    		else
    		{
    			MismatchedSetException mse = new MismatchedSetException(null,input);
    			DebugRecognitionException(mse);
    			Recover(mse);
    			throw mse;
    		}

    		DebugLocation(107, 30);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:107:30: ( Digit )*
    		try { DebugEnterSubRule(6);
    		while (true)
    		{
    			int alt6=2;
    			try { DebugEnterDecision(6, decisionCanBacktrack[6]);
    			int LA6_0 = input.LA(1);

    			if (((LA6_0>='0' && LA6_0<='9')))
    			{
    				alt6 = 1;
    			}


    			} finally { DebugExitDecision(6); }
    			switch ( alt6 )
    			{
    			case 1:
    				DebugEnterAlt(1);
    				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:
    				{
    				DebugLocation(107, 30);
    				input.Consume();


    				}
    				break;

    			default:
    				goto loop6;
    			}
    		}

    		loop6:
    			;

    		} finally { DebugExitSubRule(6); }


    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("Exponent", 11);
    		LeaveRule("Exponent", 11);
    		LeaveRule_Exponent();
        }
    }
    // $ANTLR end "Exponent"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_String() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_String() {}

    // $ANTLR start "String"
    [GrammarRule("String")]
    private void mString()
    {
    	EnterRule_String();
    	EnterRule("String", 12);
    	TraceIn("String", 12);
    		try
    		{
    		int _type = String;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:111:2: ( '\"' ( EscapeSequence |~ ( '\\u0000' .. '\\u001f' | '\\\\' | '\\\"' ) )* '\"' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:111:4: '\"' ( EscapeSequence |~ ( '\\u0000' .. '\\u001f' | '\\\\' | '\\\"' ) )* '\"'
    		{
    		DebugLocation(111, 4);
    		Match('\"'); 
    		DebugLocation(111, 8);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:111:8: ( EscapeSequence |~ ( '\\u0000' .. '\\u001f' | '\\\\' | '\\\"' ) )*
    		try { DebugEnterSubRule(7);
    		while (true)
    		{
    			int alt7=3;
    			try { DebugEnterDecision(7, decisionCanBacktrack[7]);
    			int LA7_0 = input.LA(1);

    			if ((LA7_0=='\\'))
    			{
    				alt7 = 1;
    			}
    			else if (((LA7_0>=' ' && LA7_0<='!')||(LA7_0>='#' && LA7_0<='[')||(LA7_0>=']' && LA7_0<='\uFFFF')))
    			{
    				alt7 = 2;
    			}


    			} finally { DebugExitDecision(7); }
    			switch ( alt7 )
    			{
    			case 1:
    				DebugEnterAlt(1);
    				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:111:10: EscapeSequence
    				{
    				DebugLocation(111, 10);
    				mEscapeSequence(); 

    				}
    				break;
    			case 2:
    				DebugEnterAlt(2);
    				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:111:27: ~ ( '\\u0000' .. '\\u001f' | '\\\\' | '\\\"' )
    				{
    				DebugLocation(111, 27);
    				input.Consume();


    				}
    				break;

    			default:
    				goto loop7;
    			}
    		}

    		loop7:
    			;

    		} finally { DebugExitSubRule(7); }

    		DebugLocation(111, 67);
    		Match('\"'); 

    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("String", 12);
    		LeaveRule("String", 12);
    		LeaveRule_String();
        }
    }
    // $ANTLR end "String"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_WS() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_WS() {}

    // $ANTLR start "WS"
    [GrammarRule("WS")]
    private void mWS()
    {
    	EnterRule_WS();
    	EnterRule("WS", 13);
    	TraceIn("WS", 13);
    		try
    		{
    		int _type = WS;
    		int _channel = DefaultTokenChannel;
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:115:2: ( ( ' ' | '\\n' | '\\r' | '\\t' )+ )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:115:4: ( ' ' | '\\n' | '\\r' | '\\t' )+
    		{
    		DebugLocation(115, 4);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:115:4: ( ' ' | '\\n' | '\\r' | '\\t' )+
    		int cnt8=0;
    		try { DebugEnterSubRule(8);
    		while (true)
    		{
    			int alt8=2;
    			try { DebugEnterDecision(8, decisionCanBacktrack[8]);
    			int LA8_0 = input.LA(1);

    			if (((LA8_0>='\t' && LA8_0<='\n')||LA8_0=='\r'||LA8_0==' '))
    			{
    				alt8 = 1;
    			}


    			} finally { DebugExitDecision(8); }
    			switch (alt8)
    			{
    			case 1:
    				DebugEnterAlt(1);
    				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:
    				{
    				DebugLocation(115, 4);
    				input.Consume();


    				}
    				break;

    			default:
    				if (cnt8 >= 1)
    					goto loop8;

    				EarlyExitException eee8 = new EarlyExitException( 8, input );
    				DebugRecognitionException(eee8);
    				throw eee8;
    			}
    			cnt8++;
    		}
    		loop8:
    			;

    		} finally { DebugExitSubRule(8); }

    		DebugLocation(115, 27);
    		Skip();

    		}

    		state.type = _type;
    		state.channel = _channel;
    	}
    	finally
    	{
    		TraceOut("WS", 13);
    		LeaveRule("WS", 13);
    		LeaveRule_WS();
        }
    }
    // $ANTLR end "WS"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_EscapeSequence() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_EscapeSequence() {}

    // $ANTLR start "EscapeSequence"
    [GrammarRule("EscapeSequence")]
    private void mEscapeSequence()
    {
    	EnterRule_EscapeSequence();
    	EnterRule("EscapeSequence", 14);
    	TraceIn("EscapeSequence", 14);
    		try
    		{
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:6: ( '\\\\' ( UnicodeEscape | 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' | '\\'' | '\\\\' | '\\/' ) )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:10: '\\\\' ( UnicodeEscape | 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' | '\\'' | '\\\\' | '\\/' )
    		{
    		DebugLocation(118, 10);
    		Match('\\'); 
    		DebugLocation(118, 15);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:15: ( UnicodeEscape | 'b' | 't' | 'n' | 'f' | 'r' | '\\\"' | '\\'' | '\\\\' | '\\/' )
    		int alt9=10;
    		try { DebugEnterSubRule(9);
    		try { DebugEnterDecision(9, decisionCanBacktrack[9]);
    		switch (input.LA(1))
    		{
    		case 'u':
    			{
    			alt9 = 1;
    			}
    			break;
    		case 'b':
    			{
    			alt9 = 2;
    			}
    			break;
    		case 't':
    			{
    			alt9 = 3;
    			}
    			break;
    		case 'n':
    			{
    			alt9 = 4;
    			}
    			break;
    		case 'f':
    			{
    			alt9 = 5;
    			}
    			break;
    		case 'r':
    			{
    			alt9 = 6;
    			}
    			break;
    		case '\"':
    			{
    			alt9 = 7;
    			}
    			break;
    		case '\'':
    			{
    			alt9 = 8;
    			}
    			break;
    		case '\\':
    			{
    			alt9 = 9;
    			}
    			break;
    		case '/':
    			{
    			alt9 = 10;
    			}
    			break;
    		default:
    			{
    				NoViableAltException nvae = new NoViableAltException("", 9, 0, input);
    				DebugRecognitionException(nvae);
    				throw nvae;
    			}
    		}

    		} finally { DebugExitDecision(9); }
    		switch (alt9)
    		{
    		case 1:
    			DebugEnterAlt(1);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:16: UnicodeEscape
    			{
    			DebugLocation(118, 16);
    			mUnicodeEscape(); 

    			}
    			break;
    		case 2:
    			DebugEnterAlt(2);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:31: 'b'
    			{
    			DebugLocation(118, 31);
    			Match('b'); 

    			}
    			break;
    		case 3:
    			DebugEnterAlt(3);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:35: 't'
    			{
    			DebugLocation(118, 35);
    			Match('t'); 

    			}
    			break;
    		case 4:
    			DebugEnterAlt(4);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:39: 'n'
    			{
    			DebugLocation(118, 39);
    			Match('n'); 

    			}
    			break;
    		case 5:
    			DebugEnterAlt(5);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:43: 'f'
    			{
    			DebugLocation(118, 43);
    			Match('f'); 

    			}
    			break;
    		case 6:
    			DebugEnterAlt(6);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:47: 'r'
    			{
    			DebugLocation(118, 47);
    			Match('r'); 

    			}
    			break;
    		case 7:
    			DebugEnterAlt(7);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:51: '\\\"'
    			{
    			DebugLocation(118, 51);
    			Match('\"'); 

    			}
    			break;
    		case 8:
    			DebugEnterAlt(8);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:56: '\\''
    			{
    			DebugLocation(118, 56);
    			Match('\''); 

    			}
    			break;
    		case 9:
    			DebugEnterAlt(9);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:61: '\\\\'
    			{
    			DebugLocation(118, 61);
    			Match('\\'); 

    			}
    			break;
    		case 10:
    			DebugEnterAlt(10);
    			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:118:66: '\\/'
    			{
    			DebugLocation(118, 66);
    			Match('/'); 

    			}
    			break;

    		}
    		} finally { DebugExitSubRule(9); }


    		}

    	}
    	finally
    	{
    		TraceOut("EscapeSequence", 14);
    		LeaveRule("EscapeSequence", 14);
    		LeaveRule_EscapeSequence();
        }
    }
    // $ANTLR end "EscapeSequence"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_UnicodeEscape() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_UnicodeEscape() {}

    // $ANTLR start "UnicodeEscape"
    [GrammarRule("UnicodeEscape")]
    private void mUnicodeEscape()
    {
    	EnterRule_UnicodeEscape();
    	EnterRule("UnicodeEscape", 15);
    	TraceIn("UnicodeEscape", 15);
    		try
    		{
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:122:2: ( 'u' HexDigit HexDigit HexDigit HexDigit )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:122:4: 'u' HexDigit HexDigit HexDigit HexDigit
    		{
    		DebugLocation(122, 4);
    		Match('u'); 
    		DebugLocation(122, 8);
    		mHexDigit(); 
    		DebugLocation(122, 17);
    		mHexDigit(); 
    		DebugLocation(122, 26);
    		mHexDigit(); 
    		DebugLocation(122, 35);
    		mHexDigit(); 

    		}

    	}
    	finally
    	{
    		TraceOut("UnicodeEscape", 15);
    		LeaveRule("UnicodeEscape", 15);
    		LeaveRule_UnicodeEscape();
        }
    }
    // $ANTLR end "UnicodeEscape"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_HexDigit() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_HexDigit() {}

    // $ANTLR start "HexDigit"
    [GrammarRule("HexDigit")]
    private void mHexDigit()
    {
    	EnterRule_HexDigit();
    	EnterRule("HexDigit", 16);
    	TraceIn("HexDigit", 16);
    		try
    		{
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:126:2: ( '0' .. '9' | 'A' .. 'F' | 'a' .. 'f' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:
    		{
    		DebugLocation(126, 2);
    		if ((input.LA(1)>='0' && input.LA(1)<='9')||(input.LA(1)>='A' && input.LA(1)<='F')||(input.LA(1)>='a' && input.LA(1)<='f'))
    		{
    			input.Consume();
    		}
    		else
    		{
    			MismatchedSetException mse = new MismatchedSetException(null,input);
    			DebugRecognitionException(mse);
    			Recover(mse);
    			throw mse;
    		}


    		}

    	}
    	finally
    	{
    		TraceOut("HexDigit", 16);
    		LeaveRule("HexDigit", 16);
    		LeaveRule_HexDigit();
        }
    }
    // $ANTLR end "HexDigit"

    [Conditional("ANTLR_TRACE")]
    protected virtual void EnterRule_Digit() {}
    [Conditional("ANTLR_TRACE")]
    protected virtual void LeaveRule_Digit() {}

    // $ANTLR start "Digit"
    [GrammarRule("Digit")]
    private void mDigit()
    {
    	EnterRule_Digit();
    	EnterRule("Digit", 17);
    	TraceIn("Digit", 17);
    		try
    		{
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:130:2: ( '0' .. '9' )
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:
    		{
    		DebugLocation(130, 2);
    		if ((input.LA(1)>='0' && input.LA(1)<='9'))
    		{
    			input.Consume();
    		}
    		else
    		{
    			MismatchedSetException mse = new MismatchedSetException(null,input);
    			DebugRecognitionException(mse);
    			Recover(mse);
    			throw mse;
    		}


    		}

    	}
    	finally
    	{
    		TraceOut("Digit", 17);
    		LeaveRule("Digit", 17);
    		LeaveRule_Digit();
        }
    }
    // $ANTLR end "Digit"

    public override void mTokens()
    {
    	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:8: ( COMMA | T__21 | T__22 | T__23 | T__24 | T__25 | T__26 | T__27 | T__28 | Number | Exponent | String | WS )
    	int alt10=13;
    	try { DebugEnterDecision(10, decisionCanBacktrack[10]);
    	switch (input.LA(1))
    	{
    	case ',':
    		{
    		alt10 = 1;
    		}
    		break;
    	case ':':
    		{
    		alt10 = 2;
    		}
    		break;
    	case '[':
    		{
    		alt10 = 3;
    		}
    		break;
    	case ']':
    		{
    		alt10 = 4;
    		}
    		break;
    	case 'f':
    		{
    		alt10 = 5;
    		}
    		break;
    	case 'n':
    		{
    		alt10 = 6;
    		}
    		break;
    	case 't':
    		{
    		alt10 = 7;
    		}
    		break;
    	case '{':
    		{
    		alt10 = 8;
    		}
    		break;
    	case '}':
    		{
    		alt10 = 9;
    		}
    		break;
    	case '-':
    	case '0':
    	case '1':
    	case '2':
    	case '3':
    	case '4':
    	case '5':
    	case '6':
    	case '7':
    	case '8':
    	case '9':
    		{
    		alt10 = 10;
    		}
    		break;
    	case 'E':
    	case 'e':
    		{
    		alt10 = 11;
    		}
    		break;
    	case '\"':
    		{
    		alt10 = 12;
    		}
    		break;
    	case '\t':
    	case '\n':
    	case '\r':
    	case ' ':
    		{
    		alt10 = 13;
    		}
    		break;
    	default:
    		{
    			NoViableAltException nvae = new NoViableAltException("", 10, 0, input);
    			DebugRecognitionException(nvae);
    			throw nvae;
    		}
    	}

    	} finally { DebugExitDecision(10); }
    	switch (alt10)
    	{
    	case 1:
    		DebugEnterAlt(1);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:10: COMMA
    		{
    		DebugLocation(1, 10);
    		mCOMMA(); 

    		}
    		break;
    	case 2:
    		DebugEnterAlt(2);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:16: T__21
    		{
    		DebugLocation(1, 16);
    		mT__21(); 

    		}
    		break;
    	case 3:
    		DebugEnterAlt(3);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:22: T__22
    		{
    		DebugLocation(1, 22);
    		mT__22(); 

    		}
    		break;
    	case 4:
    		DebugEnterAlt(4);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:28: T__23
    		{
    		DebugLocation(1, 28);
    		mT__23(); 

    		}
    		break;
    	case 5:
    		DebugEnterAlt(5);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:34: T__24
    		{
    		DebugLocation(1, 34);
    		mT__24(); 

    		}
    		break;
    	case 6:
    		DebugEnterAlt(6);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:40: T__25
    		{
    		DebugLocation(1, 40);
    		mT__25(); 

    		}
    		break;
    	case 7:
    		DebugEnterAlt(7);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:46: T__26
    		{
    		DebugLocation(1, 46);
    		mT__26(); 

    		}
    		break;
    	case 8:
    		DebugEnterAlt(8);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:52: T__27
    		{
    		DebugLocation(1, 52);
    		mT__27(); 

    		}
    		break;
    	case 9:
    		DebugEnterAlt(9);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:58: T__28
    		{
    		DebugLocation(1, 58);
    		mT__28(); 

    		}
    		break;
    	case 10:
    		DebugEnterAlt(10);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:64: Number
    		{
    		DebugLocation(1, 64);
    		mNumber(); 

    		}
    		break;
    	case 11:
    		DebugEnterAlt(11);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:71: Exponent
    		{
    		DebugLocation(1, 71);
    		mExponent(); 

    		}
    		break;
    	case 12:
    		DebugEnterAlt(12);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:80: String
    		{
    		DebugLocation(1, 80);
    		mString(); 

    		}
    		break;
    	case 13:
    		DebugEnterAlt(13);
    		// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:1:87: WS
    		{
    		DebugLocation(1, 87);
    		mWS(); 

    		}
    		break;

    	}

    }


	#region DFA

	protected override void InitDFAs()
	{
		base.InitDFAs();
	}

 
	#endregion

}
