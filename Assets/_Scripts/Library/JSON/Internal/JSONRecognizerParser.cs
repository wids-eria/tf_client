//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4 /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g 2012-07-27 13:57:56

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 168, 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591


#pragma warning disable 0414
#pragma warning disable 3021

using System.Text.RegularExpressions;
using System;


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;
using ConditionalAttribute = System.Diagnostics.ConditionalAttribute;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4")]
//[System.CLSCompliant(false)]
public partial class JSONRecognizerParser : Antlr.Runtime.Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ARRAY", "COMMA", "Digit", "EscapeSequence", "Exponent", "FALSE", "FIELD", "HexDigit", "NULL", "NUMBER", "Number", "OBJECT", "STRING", "String", "TRUE", "UnicodeEscape", "WS", "':'", "'['", "']'", "'false'", "'null'", "'true'", "'{'", "'}'"
	};
	public const int EOF=-1;
	public const int T__21=21;
	public const int T__22=22;
	public const int T__23=23;
	public const int T__24=24;
	public const int T__25=25;
	public const int T__26=26;
	public const int T__27=27;
	public const int T__28=28;
	public const int ARRAY=4;
	public const int COMMA=5;
	public const int Digit=6;
	public const int EscapeSequence=7;
	public const int Exponent=8;
	public const int FALSE=9;
	public const int FIELD=10;
	public const int HexDigit=11;
	public const int NULL=12;
	public const int NUMBER=13;
	public const int Number=14;
	public const int OBJECT=15;
	public const int STRING=16;
	public const int String=17;
	public const int TRUE=18;
	public const int UnicodeEscape=19;
	public const int WS=20;

	#if ANTLR_DEBUG
		private static readonly bool[] decisionCanBacktrack =
			new bool[]
			{
				false, // invalid decision
				false, false, false, false, false, false
			};
	#else
		private static readonly bool[] decisionCanBacktrack = new bool[0];
	#endif
	public JSONRecognizerParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public JSONRecognizerParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		OnCreated();
	}
	private ITreeAdaptor adaptor;

	public ITreeAdaptor TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return JSONRecognizerParser.tokenNames; } }
	public override string GrammarFileName { get { return "/Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g"; } }


		public CommonTree 	ToTree() {
			TreeAdaptor = new CommonTreeAdaptor();
			return json().Tree;
		}
		
		protected int StartPos() {
			return StartPos(input.LT(1));
	    	}
		
		protected int StartPos( IToken t ) {
			return t.StartIndex;
	    	}
	    	
	    	protected int StopPos() {
			return StopPos(input.LT(1));
	    	}
	    	
	    	protected int StopPos( IToken t ) {
			return t.StopIndex;
	    	}
	    	
	    	protected void	LogPos( string prefix, int pos ) {
	    		Console.Out.Write( string.Format("{0} = {1}\n", prefix, pos) );
	    	}


	[Conditional("ANTLR_TRACE")]
	protected virtual void OnCreated() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule(string ruleName, int ruleIndex) {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule(string ruleName, int ruleIndex) {}

	#region Rules

	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_json() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_json() {}

	// $ANTLR start "json"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:60:1: json : value EOF ;
	[GrammarRule("json")]
	private AstParserRuleReturnScope<CommonTree, IToken> json()
	{
		EnterRule_json();
		EnterRule("json", 1);
		TraceIn("json", 1);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken EOF2 = default(IToken);
	    AstParserRuleReturnScope<CommonTree, IToken> value1 = default(AstParserRuleReturnScope<CommonTree, IToken>);

	    CommonTree EOF2_tree = default(CommonTree);

		try { DebugEnterRule(GrammarFileName, "json");
		DebugLocation(60, 12);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:61:2: ( value EOF )
			DebugEnterAlt(1);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:61:4: value EOF
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(61, 4);
			PushFollow(Follow._value_in_json105);
			value1=value();
			PopFollow();

			adaptor.AddChild(root_0, value1.Tree);
			DebugLocation(61, 10);
			EOF2=(IToken)Match(input,EOF,Follow._EOF_in_json107); 
			EOF2_tree = (CommonTree)adaptor.Create(EOF2);
			adaptor.AddChild(root_0, EOF2_tree);


			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("json", 1);
			LeaveRule("json", 1);
			LeaveRule_json();
	    }
	 	DebugLocation(61, 12);
		} finally { DebugExitRule(GrammarFileName, "json"); }
		return retval;

	}
	// $ANTLR end "json"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_value() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_value() {}

	// $ANTLR start "value"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:63:1: value : ( string | number | object | array | 'true' -> TRUE | 'false' -> FALSE | 'null' -> NULL );
	[GrammarRule("value")]
	private AstParserRuleReturnScope<CommonTree, IToken> value()
	{
		EnterRule_value();
		EnterRule("value", 2);
		TraceIn("value", 2);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken string_literal7 = default(IToken);
	    IToken string_literal8 = default(IToken);
	    IToken string_literal9 = default(IToken);
	    AstParserRuleReturnScope<CommonTree, IToken> string3 = default(AstParserRuleReturnScope<CommonTree, IToken>);
	    AstParserRuleReturnScope<CommonTree, IToken> number4 = default(AstParserRuleReturnScope<CommonTree, IToken>);
	    AstParserRuleReturnScope<CommonTree, IToken> object5 = default(AstParserRuleReturnScope<CommonTree, IToken>);
	    AstParserRuleReturnScope<CommonTree, IToken> array6 = default(AstParserRuleReturnScope<CommonTree, IToken>);

	    CommonTree string_literal7_tree = default(CommonTree);
	    CommonTree string_literal8_tree = default(CommonTree);
	    CommonTree string_literal9_tree = default(CommonTree);
	    RewriteRuleITokenStream stream_24=new RewriteRuleITokenStream(adaptor,"token 24");
	    RewriteRuleITokenStream stream_25=new RewriteRuleITokenStream(adaptor,"token 25");
	    RewriteRuleITokenStream stream_26=new RewriteRuleITokenStream(adaptor,"token 26");

		try { DebugEnterRule(GrammarFileName, "value");
		DebugLocation(63, 1);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:64:2: ( string | number | object | array | 'true' -> TRUE | 'false' -> FALSE | 'null' -> NULL )
			int alt1=7;
			try { DebugEnterDecision(1, decisionCanBacktrack[1]);
			switch (input.LA(1))
			{
			case String:
				{
				alt1 = 1;
				}
				break;
			case Number:
				{
				alt1 = 2;
				}
				break;
			case 27:
				{
				alt1 = 3;
				}
				break;
			case 22:
				{
				alt1 = 4;
				}
				break;
			case 26:
				{
				alt1 = 5;
				}
				break;
			case 24:
				{
				alt1 = 6;
				}
				break;
			case 25:
				{
				alt1 = 7;
				}
				break;
			default:
				{
					NoViableAltException nvae = new NoViableAltException("", 1, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(1); }
			switch (alt1)
			{
			case 1:
				DebugEnterAlt(1);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:64:4: string
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(64, 4);
				PushFollow(Follow._string_in_value116);
				string3=@string();
				PopFollow();

				adaptor.AddChild(root_0, string3.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:65:4: number
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(65, 4);
				PushFollow(Follow._number_in_value121);
				number4=number();
				PopFollow();

				adaptor.AddChild(root_0, number4.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:66:4: object
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(66, 4);
				PushFollow(Follow._object_in_value126);
				object5=@object();
				PopFollow();

				adaptor.AddChild(root_0, object5.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:67:4: array
				{
				root_0 = (CommonTree)adaptor.Nil();

				DebugLocation(67, 4);
				PushFollow(Follow._array_in_value131);
				array6=array();
				PopFollow();

				adaptor.AddChild(root_0, array6.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:68:4: 'true'
				{
				DebugLocation(68, 4);
				string_literal7=(IToken)Match(input,26,Follow._26_in_value136);  
				stream_26.Add(string_literal7);



				{
				// AST REWRITE
				// elements: 
				// token labels: 
				// rule labels: retval
				// token list labels: 
				// rule list labels: 
				// wildcard labels: 
				retval.Tree = root_0;
				RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

				root_0 = (CommonTree)adaptor.Nil();
				// 68:11: -> TRUE
				{
					DebugLocation(68, 14);
					adaptor.AddChild(root_0, (CommonTree)adaptor.Create(TRUE, "TRUE"));

				}

				retval.Tree = root_0;
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:69:4: 'false'
				{
				DebugLocation(69, 4);
				string_literal8=(IToken)Match(input,24,Follow._24_in_value145);  
				stream_24.Add(string_literal8);



				{
				// AST REWRITE
				// elements: 
				// token labels: 
				// rule labels: retval
				// token list labels: 
				// rule list labels: 
				// wildcard labels: 
				retval.Tree = root_0;
				RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

				root_0 = (CommonTree)adaptor.Nil();
				// 69:12: -> FALSE
				{
					DebugLocation(69, 15);
					adaptor.AddChild(root_0, (CommonTree)adaptor.Create(FALSE, "FALSE"));

				}

				retval.Tree = root_0;
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:70:4: 'null'
				{
				DebugLocation(70, 4);
				string_literal9=(IToken)Match(input,25,Follow._25_in_value154);  
				stream_25.Add(string_literal9);



				{
				// AST REWRITE
				// elements: 
				// token labels: 
				// rule labels: retval
				// token list labels: 
				// rule list labels: 
				// wildcard labels: 
				retval.Tree = root_0;
				RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

				root_0 = (CommonTree)adaptor.Nil();
				// 70:11: -> NULL
				{
					DebugLocation(70, 14);
					adaptor.AddChild(root_0, (CommonTree)adaptor.Create(NULL, "NULL"));

				}

				retval.Tree = root_0;
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("value", 2);
			LeaveRule("value", 2);
			LeaveRule_value();
	    }
	 	DebugLocation(71, 1);
		} finally { DebugExitRule(GrammarFileName, "value"); }
		return retval;

	}
	// $ANTLR end "value"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_string() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_string() {}

	// $ANTLR start "string"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:73:1: string : String -> ^( STRING String ) ;
	[GrammarRule("string")]
	private AstParserRuleReturnScope<CommonTree, IToken> @string()
	{
		EnterRule_string();
		EnterRule("string", 3);
		TraceIn("string", 3);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken String10 = default(IToken);

	    CommonTree String10_tree = default(CommonTree);
	    RewriteRuleITokenStream stream_String=new RewriteRuleITokenStream(adaptor,"token String");

		try { DebugEnterRule(GrammarFileName, "string");
		DebugLocation(73, 1);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:74:2: ( String -> ^( STRING String ) )
			DebugEnterAlt(1);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:74:4: String
			{
			DebugLocation(74, 4);
			String10=(IToken)Match(input,String,Follow._String_in_string171);  
			stream_String.Add(String10);



			{
			// AST REWRITE
			// elements: String
			// token labels: 
			// rule labels: retval
			// token list labels: 
			// rule list labels: 
			// wildcard labels: 
			retval.Tree = root_0;
			RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

			root_0 = (CommonTree)adaptor.Nil();
			// 74:11: -> ^( STRING String )
			{
				DebugLocation(74, 14);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:74:14: ^( STRING String )
				{
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(74, 16);
				root_1 = (CommonTree)adaptor.BecomeRoot((CommonTree)adaptor.Create(STRING, "STRING"), root_1);

				DebugLocation(74, 23);
				adaptor.AddChild(root_1, stream_String.NextNode());

				adaptor.AddChild(root_0, root_1);
				}

			}

			retval.Tree = root_0;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("string", 3);
			LeaveRule("string", 3);
			LeaveRule_string();
	    }
	 	DebugLocation(75, 1);
		} finally { DebugExitRule(GrammarFileName, "string"); }
		return retval;

	}
	// $ANTLR end "string"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_number() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_number() {}

	// $ANTLR start "number"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:78:1: number : n= Number {...}? ( Exponent )? -> ^( NUMBER Number ( Exponent )? ) ;
	[GrammarRule("number")]
	private AstParserRuleReturnScope<CommonTree, IToken> number()
	{
		EnterRule_number();
		EnterRule("number", 4);
		TraceIn("number", 4);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken n = default(IToken);
	    IToken Exponent11 = default(IToken);

	    CommonTree n_tree = default(CommonTree);
	    CommonTree Exponent11_tree = default(CommonTree);
	    RewriteRuleITokenStream stream_Exponent=new RewriteRuleITokenStream(adaptor,"token Exponent");
	    RewriteRuleITokenStream stream_Number=new RewriteRuleITokenStream(adaptor,"token Number");

		try { DebugEnterRule(GrammarFileName, "number");
		DebugLocation(78, 1);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:79:2: (n= Number {...}? ( Exponent )? -> ^( NUMBER Number ( Exponent )? ) )
			DebugEnterAlt(1);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:79:4: n= Number {...}? ( Exponent )?
			{
			DebugLocation(79, 5);
			n=(IToken)Match(input,Number,Follow._Number_in_number194);  
			stream_Number.Add(n);

			DebugLocation(79, 13);
			if (!((Regex.Match(n.Text, "(0|(-?[1-9]\\d*))(\\.\\d+)?").Success)))
			{
				throw new FailedPredicateException(input, "number", "Regex.Match(n.Text, \"(0|(-?[1-9]\\\\d*))(\\\\.\\\\d+)?\").Success");
			}
			DebugLocation(79, 75);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:79:75: ( Exponent )?
			int alt2=2;
			try { DebugEnterSubRule(2);
			try { DebugEnterDecision(2, decisionCanBacktrack[2]);
			int LA2_0 = input.LA(1);

			if ((LA2_0==Exponent))
			{
				alt2 = 1;
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:79:75: Exponent
				{
				DebugLocation(79, 75);
				Exponent11=(IToken)Match(input,Exponent,Follow._Exponent_in_number198);  
				stream_Exponent.Add(Exponent11);


				}
				break;

			}
			} finally { DebugExitSubRule(2); }



			{
			// AST REWRITE
			// elements: Number, Exponent
			// token labels: 
			// rule labels: retval
			// token list labels: 
			// rule list labels: 
			// wildcard labels: 
			retval.Tree = root_0;
			RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

			root_0 = (CommonTree)adaptor.Nil();
			// 79:85: -> ^( NUMBER Number ( Exponent )? )
			{
				DebugLocation(79, 88);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:79:88: ^( NUMBER Number ( Exponent )? )
				{
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(79, 90);
				root_1 = (CommonTree)adaptor.BecomeRoot((CommonTree)adaptor.Create(NUMBER, "NUMBER"), root_1);

				DebugLocation(79, 97);
				adaptor.AddChild(root_1, stream_Number.NextNode());
				DebugLocation(79, 104);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:79:104: ( Exponent )?
				if (stream_Exponent.HasNext)
				{
					DebugLocation(79, 104);
					adaptor.AddChild(root_1, stream_Exponent.NextNode());

				}
				stream_Exponent.Reset();

				adaptor.AddChild(root_0, root_1);
				}

			}

			retval.Tree = root_0;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("number", 4);
			LeaveRule("number", 4);
			LeaveRule_number();
	    }
	 	DebugLocation(80, 1);
		} finally { DebugExitRule(GrammarFileName, "number"); }
		return retval;

	}
	// $ANTLR end "number"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_object() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_object() {}

	// $ANTLR start "object"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:82:1: object : '{' ( members )? '}' -> ^( OBJECT ( members )? ) ;
	[GrammarRule("object")]
	private AstParserRuleReturnScope<CommonTree, IToken> @object()
	{
		EnterRule_object();
		EnterRule("object", 5);
		TraceIn("object", 5);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken char_literal12 = default(IToken);
	    IToken char_literal14 = default(IToken);
	    AstParserRuleReturnScope<CommonTree, IToken> members13 = default(AstParserRuleReturnScope<CommonTree, IToken>);

	    CommonTree char_literal12_tree = default(CommonTree);
	    CommonTree char_literal14_tree = default(CommonTree);
	    RewriteRuleITokenStream stream_27=new RewriteRuleITokenStream(adaptor,"token 27");
	    RewriteRuleITokenStream stream_28=new RewriteRuleITokenStream(adaptor,"token 28");
	    RewriteRuleSubtreeStream stream_members=new RewriteRuleSubtreeStream(adaptor,"rule members");
		try { DebugEnterRule(GrammarFileName, "object");
		DebugLocation(82, 1);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:83:2: ( '{' ( members )? '}' -> ^( OBJECT ( members )? ) )
			DebugEnterAlt(1);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:83:4: '{' ( members )? '}'
			{
			DebugLocation(83, 4);
			char_literal12=(IToken)Match(input,27,Follow._27_in_object221);  
			stream_27.Add(char_literal12);

			DebugLocation(83, 8);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:83:8: ( members )?
			int alt3=2;
			try { DebugEnterSubRule(3);
			try { DebugEnterDecision(3, decisionCanBacktrack[3]);
			int LA3_0 = input.LA(1);

			if ((LA3_0==String))
			{
				alt3 = 1;
			}
			} finally { DebugExitDecision(3); }
			switch (alt3)
			{
			case 1:
				DebugEnterAlt(1);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:83:8: members
				{
				DebugLocation(83, 8);
				PushFollow(Follow._members_in_object223);
				members13=members();
				PopFollow();

				stream_members.Add(members13.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(3); }

			DebugLocation(83, 17);
			char_literal14=(IToken)Match(input,28,Follow._28_in_object226);  
			stream_28.Add(char_literal14);



			{
			// AST REWRITE
			// elements: members
			// token labels: 
			// rule labels: retval
			// token list labels: 
			// rule list labels: 
			// wildcard labels: 
			retval.Tree = root_0;
			RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

			root_0 = (CommonTree)adaptor.Nil();
			// 83:21: -> ^( OBJECT ( members )? )
			{
				DebugLocation(83, 24);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:83:24: ^( OBJECT ( members )? )
				{
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(83, 26);
				root_1 = (CommonTree)adaptor.BecomeRoot((CommonTree)adaptor.Create(OBJECT, "OBJECT"), root_1);

				DebugLocation(83, 33);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:83:33: ( members )?
				if (stream_members.HasNext)
				{
					DebugLocation(83, 33);
					adaptor.AddChild(root_1, stream_members.NextTree());

				}
				stream_members.Reset();

				adaptor.AddChild(root_0, root_1);
				}

			}

			retval.Tree = root_0;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("object", 5);
			LeaveRule("object", 5);
			LeaveRule_object();
	    }
	 	DebugLocation(84, 1);
		} finally { DebugExitRule(GrammarFileName, "object"); }
		return retval;

	}
	// $ANTLR end "object"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_array() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_array() {}

	// $ANTLR start "array"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:86:1: array : '[' ( elements )? ']' -> ^( ARRAY ( elements )? ) ;
	[GrammarRule("array")]
	private AstParserRuleReturnScope<CommonTree, IToken> array()
	{
		EnterRule_array();
		EnterRule("array", 6);
		TraceIn("array", 6);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken char_literal15 = default(IToken);
	    IToken char_literal17 = default(IToken);
	    AstParserRuleReturnScope<CommonTree, IToken> elements16 = default(AstParserRuleReturnScope<CommonTree, IToken>);

	    CommonTree char_literal15_tree = default(CommonTree);
	    CommonTree char_literal17_tree = default(CommonTree);
	    RewriteRuleITokenStream stream_22=new RewriteRuleITokenStream(adaptor,"token 22");
	    RewriteRuleITokenStream stream_23=new RewriteRuleITokenStream(adaptor,"token 23");
	    RewriteRuleSubtreeStream stream_elements=new RewriteRuleSubtreeStream(adaptor,"rule elements");
		try { DebugEnterRule(GrammarFileName, "array");
		DebugLocation(86, 1);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:87:2: ( '[' ( elements )? ']' -> ^( ARRAY ( elements )? ) )
			DebugEnterAlt(1);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:87:4: '[' ( elements )? ']'
			{
			DebugLocation(87, 4);
			char_literal15=(IToken)Match(input,22,Follow._22_in_array247);  
			stream_22.Add(char_literal15);

			DebugLocation(87, 8);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:87:8: ( elements )?
			int alt4=2;
			try { DebugEnterSubRule(4);
			try { DebugEnterDecision(4, decisionCanBacktrack[4]);
			int LA4_0 = input.LA(1);

			if ((LA4_0==Number||LA4_0==String||LA4_0==22||(LA4_0>=24 && LA4_0<=27)))
			{
				alt4 = 1;
			}
			} finally { DebugExitDecision(4); }
			switch (alt4)
			{
			case 1:
				DebugEnterAlt(1);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:87:8: elements
				{
				DebugLocation(87, 8);
				PushFollow(Follow._elements_in_array249);
				elements16=elements();
				PopFollow();

				stream_elements.Add(elements16.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(4); }

			DebugLocation(87, 18);
			char_literal17=(IToken)Match(input,23,Follow._23_in_array252);  
			stream_23.Add(char_literal17);



			{
			// AST REWRITE
			// elements: elements
			// token labels: 
			// rule labels: retval
			// token list labels: 
			// rule list labels: 
			// wildcard labels: 
			retval.Tree = root_0;
			RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

			root_0 = (CommonTree)adaptor.Nil();
			// 87:22: -> ^( ARRAY ( elements )? )
			{
				DebugLocation(87, 25);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:87:25: ^( ARRAY ( elements )? )
				{
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(87, 27);
				root_1 = (CommonTree)adaptor.BecomeRoot((CommonTree)adaptor.Create(ARRAY, "ARRAY"), root_1);

				DebugLocation(87, 33);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:87:33: ( elements )?
				if (stream_elements.HasNext)
				{
					DebugLocation(87, 33);
					adaptor.AddChild(root_1, stream_elements.NextTree());

				}
				stream_elements.Reset();

				adaptor.AddChild(root_0, root_1);
				}

			}

			retval.Tree = root_0;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("array", 6);
			LeaveRule("array", 6);
			LeaveRule_array();
	    }
	 	DebugLocation(88, 1);
		} finally { DebugExitRule(GrammarFileName, "array"); }
		return retval;

	}
	// $ANTLR end "array"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_elements() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_elements() {}

	// $ANTLR start "elements"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:90:1: elements : value ( COMMA ! value )* ;
	[GrammarRule("elements")]
	private AstParserRuleReturnScope<CommonTree, IToken> elements()
	{
		EnterRule_elements();
		EnterRule("elements", 7);
		TraceIn("elements", 7);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken COMMA19 = default(IToken);
	    AstParserRuleReturnScope<CommonTree, IToken> value18 = default(AstParserRuleReturnScope<CommonTree, IToken>);
	    AstParserRuleReturnScope<CommonTree, IToken> value20 = default(AstParserRuleReturnScope<CommonTree, IToken>);

	    CommonTree COMMA19_tree = default(CommonTree);

		try { DebugEnterRule(GrammarFileName, "elements");
		DebugLocation(90, 1);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:91:2: ( value ( COMMA ! value )* )
			DebugEnterAlt(1);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:91:4: value ( COMMA ! value )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(91, 4);
			PushFollow(Follow._value_in_elements272);
			value18=value();
			PopFollow();

			adaptor.AddChild(root_0, value18.Tree);
			DebugLocation(91, 10);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:91:10: ( COMMA ! value )*
			try { DebugEnterSubRule(5);
			while (true)
			{
				int alt5=2;
				try { DebugEnterDecision(5, decisionCanBacktrack[5]);
				int LA5_0 = input.LA(1);

				if ((LA5_0==COMMA))
				{
					alt5 = 1;
				}


				} finally { DebugExitDecision(5); }
				switch ( alt5 )
				{
				case 1:
					DebugEnterAlt(1);
					// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:91:11: COMMA ! value
					{
					DebugLocation(91, 16);
					COMMA19=(IToken)Match(input,COMMA,Follow._COMMA_in_elements275); 
					DebugLocation(91, 18);
					PushFollow(Follow._value_in_elements278);
					value20=value();
					PopFollow();

					adaptor.AddChild(root_0, value20.Tree);

					}
					break;

				default:
					goto loop5;
				}
			}

			loop5:
				;

			} finally { DebugExitSubRule(5); }


			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("elements", 7);
			LeaveRule("elements", 7);
			LeaveRule_elements();
	    }
	 	DebugLocation(92, 1);
		} finally { DebugExitRule(GrammarFileName, "elements"); }
		return retval;

	}
	// $ANTLR end "elements"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_members() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_members() {}

	// $ANTLR start "members"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:94:1: members : pair ( COMMA ! pair )* ;
	[GrammarRule("members")]
	private AstParserRuleReturnScope<CommonTree, IToken> members()
	{
		EnterRule_members();
		EnterRule("members", 8);
		TraceIn("members", 8);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken COMMA22 = default(IToken);
	    AstParserRuleReturnScope<CommonTree, IToken> pair21 = default(AstParserRuleReturnScope<CommonTree, IToken>);
	    AstParserRuleReturnScope<CommonTree, IToken> pair23 = default(AstParserRuleReturnScope<CommonTree, IToken>);

	    CommonTree COMMA22_tree = default(CommonTree);

		try { DebugEnterRule(GrammarFileName, "members");
		DebugLocation(94, 1);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:95:2: ( pair ( COMMA ! pair )* )
			DebugEnterAlt(1);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:95:4: pair ( COMMA ! pair )*
			{
			root_0 = (CommonTree)adaptor.Nil();

			DebugLocation(95, 4);
			PushFollow(Follow._pair_in_members292);
			pair21=pair();
			PopFollow();

			adaptor.AddChild(root_0, pair21.Tree);
			DebugLocation(95, 9);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:95:9: ( COMMA ! pair )*
			try { DebugEnterSubRule(6);
			while (true)
			{
				int alt6=2;
				try { DebugEnterDecision(6, decisionCanBacktrack[6]);
				int LA6_0 = input.LA(1);

				if ((LA6_0==COMMA))
				{
					alt6 = 1;
				}


				} finally { DebugExitDecision(6); }
				switch ( alt6 )
				{
				case 1:
					DebugEnterAlt(1);
					// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:95:10: COMMA ! pair
					{
					DebugLocation(95, 15);
					COMMA22=(IToken)Match(input,COMMA,Follow._COMMA_in_members295); 
					DebugLocation(95, 17);
					PushFollow(Follow._pair_in_members298);
					pair23=pair();
					PopFollow();

					adaptor.AddChild(root_0, pair23.Tree);

					}
					break;

				default:
					goto loop6;
				}
			}

			loop6:
				;

			} finally { DebugExitSubRule(6); }


			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("members", 8);
			LeaveRule("members", 8);
			LeaveRule_members();
	    }
	 	DebugLocation(96, 1);
		} finally { DebugExitRule(GrammarFileName, "members"); }
		return retval;

	}
	// $ANTLR end "members"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_pair() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_pair() {}

	// $ANTLR start "pair"
	// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:98:1: pair : String ':' value -> ^( FIELD String value ) ;
	[GrammarRule("pair")]
	private AstParserRuleReturnScope<CommonTree, IToken> pair()
	{
		EnterRule_pair();
		EnterRule("pair", 9);
		TraceIn("pair", 9);
	    AstParserRuleReturnScope<CommonTree, IToken> retval = new AstParserRuleReturnScope<CommonTree, IToken>();
	    retval.Start = (IToken)input.LT(1);

	    CommonTree root_0 = default(CommonTree);

	    IToken String24 = default(IToken);
	    IToken char_literal25 = default(IToken);
	    AstParserRuleReturnScope<CommonTree, IToken> value26 = default(AstParserRuleReturnScope<CommonTree, IToken>);

	    CommonTree String24_tree = default(CommonTree);
	    CommonTree char_literal25_tree = default(CommonTree);
	    RewriteRuleITokenStream stream_21=new RewriteRuleITokenStream(adaptor,"token 21");
	    RewriteRuleITokenStream stream_String=new RewriteRuleITokenStream(adaptor,"token String");
	    RewriteRuleSubtreeStream stream_value=new RewriteRuleSubtreeStream(adaptor,"rule value");
		try { DebugEnterRule(GrammarFileName, "pair");
		DebugLocation(98, 1);
		try
		{
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:99:2: ( String ':' value -> ^( FIELD String value ) )
			DebugEnterAlt(1);
			// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:99:4: String ':' value
			{
			DebugLocation(99, 4);
			String24=(IToken)Match(input,String,Follow._String_in_pair314);  
			stream_String.Add(String24);

			DebugLocation(99, 11);
			char_literal25=(IToken)Match(input,21,Follow._21_in_pair316);  
			stream_21.Add(char_literal25);

			DebugLocation(99, 15);
			PushFollow(Follow._value_in_pair318);
			value26=value();
			PopFollow();

			stream_value.Add(value26.Tree);


			{
			// AST REWRITE
			// elements: String, value
			// token labels: 
			// rule labels: retval
			// token list labels: 
			// rule list labels: 
			// wildcard labels: 
			retval.Tree = root_0;
			RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.Tree:null);

			root_0 = (CommonTree)adaptor.Nil();
			// 99:21: -> ^( FIELD String value )
			{
				DebugLocation(99, 24);
				// /Users/Abahr/TrailsForward/Assets/_Scripts/Library/JSON/Internal/JSONRecognizer.g:99:24: ^( FIELD String value )
				{
				CommonTree root_1 = (CommonTree)adaptor.Nil();
				DebugLocation(99, 26);
				root_1 = (CommonTree)adaptor.BecomeRoot((CommonTree)adaptor.Create(FIELD, "FIELD"), root_1);

				DebugLocation(99, 32);
				adaptor.AddChild(root_1, stream_String.NextNode());
				DebugLocation(99, 39);
				adaptor.AddChild(root_1, stream_value.NextTree());

				adaptor.AddChild(root_0, root_1);
				}

			}

			retval.Tree = root_0;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (CommonTree)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		 

		finally
		{
			TraceOut("pair", 9);
			LeaveRule("pair", 9);
			LeaveRule_pair();
	    }
	 	DebugLocation(100, 1);
		} finally { DebugExitRule(GrammarFileName, "pair"); }
		return retval;

	}
	// $ANTLR end "pair"
	#endregion Rules


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _value_in_json105 = new BitSet(new ulong[]{0x0UL});
		public static readonly BitSet _EOF_in_json107 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _string_in_value116 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _number_in_value121 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _object_in_value126 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _array_in_value131 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _26_in_value136 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _24_in_value145 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _25_in_value154 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _String_in_string171 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Number_in_number194 = new BitSet(new ulong[]{0x102UL});
		public static readonly BitSet _Exponent_in_number198 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _27_in_object221 = new BitSet(new ulong[]{0x10020000UL});
		public static readonly BitSet _members_in_object223 = new BitSet(new ulong[]{0x10000000UL});
		public static readonly BitSet _28_in_object226 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _22_in_array247 = new BitSet(new ulong[]{0xFC24000UL});
		public static readonly BitSet _elements_in_array249 = new BitSet(new ulong[]{0x800000UL});
		public static readonly BitSet _23_in_array252 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _value_in_elements272 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _COMMA_in_elements275 = new BitSet(new ulong[]{0xF424000UL});
		public static readonly BitSet _value_in_elements278 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _pair_in_members292 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _COMMA_in_members295 = new BitSet(new ulong[]{0x20000UL});
		public static readonly BitSet _pair_in_members298 = new BitSet(new ulong[]{0x22UL});
		public static readonly BitSet _String_in_pair314 = new BitSet(new ulong[]{0x200000UL});
		public static readonly BitSet _21_in_pair316 = new BitSet(new ulong[]{0xF424000UL});
		public static readonly BitSet _value_in_pair318 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}
